var runProgram = function (code, input) {
    var code = code.split(',').map(Number);
    var pointer = 0;
    var output = "";
    while (pointer < 1000) {
        var instruction = code[pointer];
        var A = 0, B = 0, C = 0, opCode = 0;

        if (instruction >= 10000) {
            //How can this ever be true? It's never used...
            instruction -= 10000;
            A = 1;
        }
        if (instruction >= 1000) {
            instruction -= 1000;
            B = 1;
        }
        if (instruction >= 100) {
            instruction -= 100;
            C = 1;
        }
        opCode = instruction;

        if (A) {
            debugger;
        }

        //Parameters that an instruction writes to will never be in immediate mode.
        switch (opCode) {
            case 1:
                //Addition
                code[code[pointer + 3]] = (C ? code[pointer + 1] : code[code[pointer + 1]]) + (B ? code[pointer + 2] : code[code[pointer + 2]]);
                pointer += 4; // three parameters
                break;
            case 2:
                //Multiply
                code[code[pointer + 3]] = (C ? code[pointer + 1] : code[code[pointer + 1]]) * (B ? code[pointer + 2] : code[code[pointer + 2]]);
                pointer += 4; // three parameters
                break;
            case 3:
                //Read from input and store to location.
                code[code[pointer + 1]] = input;
                pointer += 2; // one parameter
                break;
            case 4:
                //Read
                output = C ? code[pointer + 1] : code[code[pointer + 1]];
                pointer += 2; // one parameter
                break;
            case 99:
                console.log('Exit code: %d.', output);
                return output;
            default:
                console.log('Error');
                throw (new Error('Unexpected opcode'));
        }
    }
    return output;

}

//Test 1:
// var code = "3,0,4,0,99";
// console.log(runProgram(code, 1));

// //Test 2:
// var code = "1002,4,3,4,33";
// console.log(runProgram(code, 1));

// //Test 3:
// var code = "1101,100,-1,4,0";
// console.log(runProgram(code, 1));


var startTime = Date.now();

//Puzzle:
var code = "3,225,1,225,6,6,1100,1,238,225,104,0,1101,48,82,225,102,59,84,224,1001,224,-944,224,4,224,102,8,223,223,101,6,224,224,1,223,224,223,1101,92,58,224,101,-150,224,224,4,224,102,8,223,223,1001,224,3,224,1,224,223,223,1102,10,89,224,101,-890,224,224,4,224,1002,223,8,223,1001,224,5,224,1,224,223,223,1101,29,16,225,101,23,110,224,1001,224,-95,224,4,224,102,8,223,223,1001,224,3,224,1,223,224,223,1102,75,72,225,1102,51,8,225,1102,26,16,225,1102,8,49,225,1001,122,64,224,1001,224,-113,224,4,224,102,8,223,223,1001,224,3,224,1,224,223,223,1102,55,72,225,1002,174,28,224,101,-896,224,224,4,224,1002,223,8,223,101,4,224,224,1,224,223,223,1102,57,32,225,2,113,117,224,101,-1326,224,224,4,224,102,8,223,223,101,5,224,224,1,223,224,223,1,148,13,224,101,-120,224,224,4,224,1002,223,8,223,101,7,224,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,8,677,226,224,102,2,223,223,1006,224,329,101,1,223,223,107,677,677,224,1002,223,2,223,1006,224,344,101,1,223,223,8,226,677,224,102,2,223,223,1006,224,359,101,1,223,223,107,226,226,224,102,2,223,223,1005,224,374,1001,223,1,223,1108,677,226,224,1002,223,2,223,1006,224,389,101,1,223,223,107,677,226,224,102,2,223,223,1006,224,404,1001,223,1,223,1107,226,677,224,1002,223,2,223,1006,224,419,1001,223,1,223,108,677,677,224,102,2,223,223,1005,224,434,1001,223,1,223,1008,677,226,224,1002,223,2,223,1006,224,449,1001,223,1,223,7,226,677,224,1002,223,2,223,1006,224,464,1001,223,1,223,1007,677,677,224,102,2,223,223,1005,224,479,1001,223,1,223,1007,226,226,224,1002,223,2,223,1005,224,494,1001,223,1,223,108,226,226,224,1002,223,2,223,1005,224,509,1001,223,1,223,1007,226,677,224,1002,223,2,223,1006,224,524,101,1,223,223,1107,677,677,224,102,2,223,223,1005,224,539,101,1,223,223,1107,677,226,224,102,2,223,223,1005,224,554,1001,223,1,223,108,677,226,224,1002,223,2,223,1006,224,569,1001,223,1,223,1108,226,677,224,1002,223,2,223,1006,224,584,101,1,223,223,8,677,677,224,1002,223,2,223,1006,224,599,1001,223,1,223,1008,226,226,224,102,2,223,223,1006,224,614,101,1,223,223,7,677,677,224,1002,223,2,223,1006,224,629,101,1,223,223,1008,677,677,224,102,2,223,223,1005,224,644,101,1,223,223,7,677,226,224,1002,223,2,223,1005,224,659,101,1,223,223,1108,226,226,224,102,2,223,223,1006,224,674,1001,223,1,223,4,223,99,226";
console.log(runProgram(code, 1));


var millis = Date.now() - startTime;
console.log(`Milliseconds elapsed = ${millis}`);
